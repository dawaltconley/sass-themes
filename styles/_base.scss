@use 'scss-properties' as color-props;
@use "sass:list";

$link-selector: '.theme-link' !default;
$anchor-override: '.subtle-link' !default;

blockquote {
    color: var(--theme-text-light);
    border-left-color: color-props.mix(--theme-text, --theme-bg, 25%);
}

pre, code {
    $lightness-scale: calc(0.9 - (0.15 * var(--theme-light)));
    border-color: color-props.set(--theme-bg,
        $saturation: scale -60%,
        $lightness: mix --theme-text $lightness-scale);
    background-color: color-props.set(--theme-bg,
        $saturation: scale -50%,
        $lightness: mix --theme-text 90%);
}

input[type="text"], textarea {
    color: var(--theme-text);
    background: color-props.mix(--theme-text, --theme-bg, calc(0.05 * var(--theme-light)));
    border-color: color-props.mix(--theme-text, --theme-bg, 25%);

    &::placeholder {
        color: var(--theme-text-light);
        opacity: 1;
    }
}

:link, #{$link-selector}:link {
    color: var(--theme-brand);
    text-decoration: none;
}

:visited, #{$link-selector}:visited {
    color: color-props.scale(--theme-brand, $saturation: -50%, $lightness: -25%);
    color: color-props.set(--theme-brand,
        $saturation: scale -40%,
        $lightness: mix --theme-text 80%);
}

a:hover, #{$link-selector}:hover {
    color: color-props.set(--theme-brand,
        $saturation: scale 50%,
        $lightness: mix --theme-text 50%);
    text-decoration: underline;
}

#{list.join($anchor-override, (), 'comma', false)} {
    &, &:hover, &:visited {
        color: inherit;
    }
}
