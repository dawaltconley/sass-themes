@mixin wrapper($breakpoints, $min-margins: 0) {
    @for $i from 1 through length($breakpoints) {
        $bp: check-bp(nth($breakpoints, $i));
        $breakpoints: set-nth($breakpoints, $i, $bp);
    }

    $bp-first: nth($breakpoints, 1);
    $bp-last: nth($breakpoints, length($breakpoints));

    @if length($breakpoints) < 2 {
        @error "Invalid breakpoint list: must contain at least two values.";
    } @else if $bp-first < $bp-last {
        @error "Invalid breakpoint list: values should proceed from highest to lowest";
    }

    @extend .clearfix;
    margin-left: auto;
    margin-right: auto;
    max-width: $bp-first - ($min-margins * 2);

    @for $i from 1 to length($breakpoints) {
        $bp: nth($breakpoints, $i);
        $bp-next: nth($breakpoints, $i + 1);
        $query: null;
        $invalid: null;

        @if $bp < $bp-next {
            @error "Invalid breakpoint list: order must be consistent.";
        }

        @media screen and (max-width: $bp) {
            max-width: $bp-next - ($min-margins * 2);
        }
    }
}
