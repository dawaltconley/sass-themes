@use "sass:color";
@use "sass:map";
@use "themes" as *;

@function _m($args...) {
    @return map.get($args...);
}

blockquote {
    @include themeify using ($theme) {
        $text: _m($theme, text-light);
        $bg: _m($theme, bg);
        color: $text;
        border-left-color: color.mix($text, $bg, 25%);
    }
}

pre, code {
    @include themeify using ($t) {
        $text: _m($t,'text');
        $bg: _m($t,'bg');

        $ld-tx-bg: ld($text, $bg);
        $box-color: color.adjust($bg, $lightness: $ld-tx-bg * if(_m($t,'light'), -15%, 15%));
        $box-color: color.adjust($box-color, $saturation: -(color.saturation($box-color) * 0.5) );
        color: color.mix($text, $box-color, 80%);
        border-color: color.adjust($box-color, $lightness: -($ld-tx-bg * if(_m($t,'light'), 25%, 10%)));
        background-color: $box-color;
    }
}

input[type="text"], textarea {
    @include themeify using ($t) {
        $text: _m($t,'text');
        $bg: _m($t,'bg');

        color: $text;
        background: color.mix($text, $bg, if(_m($t,'light'), 0%, 5%));
        border-color: color.mix($text, $bg, 25%);

        &::placeholder {
            color: _m($t,'text-light');
            opacity: 1;
        }
    }
}

// Text

.text-light {
    @include themeify using ($theme) {
        color: _m($theme,'text-light');
    }
}

.text-brand {
    @include themeify using ($theme) {
        color: _m($theme,'brand');
    }
}

// Background

.theme-bg {
    @include themeify using ($theme) {
        background-color: _m($theme,'bg');
    }
}

.overlay {
    @include themeify using ($theme) {
        background-color: rgba(_m($theme,'bg'), 0.5);
    }
}

.heavy-overlay {
    @include themeify using ($theme) {
        background-color: rgba(_m($theme,'bg'), 0.75);
    }
}

// Borders

.border {
    @include themeify using ($theme) {
        $text: _m($theme,'text');
        $bg: _m($theme,'bg');

        &-light {
            border-color: color.mix($text, $bg, 10%);
        }

        &-x-light {
            border-color: color.mix($text, $bg, 5%);
        }
    }
}

// Links

a, .theme-link {
    @include themeify using ($t) {
        $brand: _m($t,'brand');
        @if $brand {
            $ld-br-tx: ld($brand, _m($t,'text'));
            $ld-br-bg: ld($brand, _m($t,'bg'));

            color: $brand;

            &:visited { color: color.adjust($brand, $lightness: if(_m($t,'light'), $ld-br-bg, $ld-br-tx) * 35%); }
            &:hover { color: color.adjust($brand, $lightness: -(if(_m($t,'light'), $ld-br-tx, $ld-br-bg) * 45%)); }
        }
    }
}

.subtle-link {
    @include themeify using ($theme) {
        &, &:hover, &:visited {
            color: _m($theme,'text');
        }
    }
}

// Buttons

.button {
    @include themeify using ($t) {
        $bg: _m($t,'button','bg');
        $text: _m($t,'button','text');
        background-color: $bg;

        &, &:hover, &:visited {
            color: $text;
        }

        &:hover {
            background-color: color.mix($bg, $text, 80%);
        }

        &.subtle-button {
            color: $bg;
            background-color: $text;

            &:hover {
                background-color: color.mix($text, $bg, 80%);
            }
        }
    }
}

.button-o {
    @include themeify using ($t) {
        $text-color: _m($t,'text');
        $button-color: _m($t,'button','bg');
        $button-text: _m($t,'button','text'); 

        background-color: _m($t,'bg');
        border-color: $button-color;

        &, &:visited {
            color: $button-color;
        }

        &:hover {
            color: $button-text;
            background-color: $button-color;
            border-color: $button-color;
        }

        &.subtle-button:not(:hover) {
            border-color: $text-color;

            &, &:visited {
                color: $text-color;
            }
        }
    }
}

// Decoration

.fade-bottom::after {
    @include themeify using ($t) {
        $bg: _m($t,'bg');
        background: linear-gradient(to bottom, rgba($bg, 0), $bg 80%);
    }
}

// SVG

.fill-color-theme {
    @include themeify using ($theme) {
        &-text {
            fill: _m($theme,'text');
        }
        &-bg {
            fill: _m($theme,'bg');
        }
        &-brand {
            fill: _m($theme,'brand');
        }
    }
}

.stroke-color-theme {
    @include themeify using ($theme) {
        &-text {
            stroke: _m($theme,'text');
        }
        &-bg {
            stroke: _m($theme,'bg');
        }
        &-brand {
            stroke: _m($theme,'brand');
        }
    }
}
